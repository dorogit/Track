{"ast":null,"code":"import React from \"react\";\nimport SignUp from \"./src/screens/SignUp\";\nimport SignIn from \"./src/screens/SignIn\";\nimport CreateScreen from \"./src/screens/CreateScreen\";\nimport DetailScreen from \"./src/screens/DetailScreen\";\nimport ListScreen from \"./src/screens/ListScreen\";\nimport AccountScreen from \"./src/screens/AccountScreen\";\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginFlow = createNativeStackNavigator();\nvar MainFlow = createNativeStackNavigator();\nvar Tab = createMaterialBottomTabNavigator();\nvar Authentication = function Authentication() {\n  return _jsxs(LoginFlow.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"SignUp\",\n      component: SignUp\n    }), _jsx(Stack.Screen, {\n      name: \"SignIn\",\n      component: SignIn\n    })]\n  });\n};\nvar HomeStack = function HomeStack() {\n  return _jsxs(Tab.Navigator, {\n    children: [_jsxs(MainFlow.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"List\",\n        component: ListScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Detail\",\n        component: DetailScreen\n      })]\n    }), _jsx(Stack.Screen, {\n      name: \"Create\",\n      component: CreateScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Account\",\n      component: AccountScreen\n    })]\n  });\n};\nvar App = function App() {\n  var isLoggedIn = false;\n  return _jsx(NavigationContainer, {\n    children: isLoggedIn ? _jsx(HomeStack, {}) : _jsx(Authentication, {})\n  });\n};\nexport default App;","map":{"version":3,"names":["React","SignUp","SignIn","CreateScreen","DetailScreen","ListScreen","AccountScreen","createNativeStackNavigator","NavigationContainer","createMaterialBottomTabNavigator","jsx","_jsx","jsxs","_jsxs","LoginFlow","MainFlow","Tab","Authentication","Navigator","children","Stack","Screen","name","component","HomeStack","App","isLoggedIn"],"sources":["D:/Programming/native/Track/Track-app/App.js"],"sourcesContent":["import React from \"react\";\r\nimport SignUp from \"./src/screens/SignUp\";\r\nimport SignIn from \"./src/screens/SignIn\";\r\nimport CreateScreen from \"./src/screens/CreateScreen\";\r\nimport DetailScreen from \"./src/screens/DetailScreen\";\r\nimport ListScreen from \"./src/screens/ListScreen\";\r\nimport AccountScreen from \"./src/screens/AccountScreen\";\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\r\n\r\nconst LoginFlow = createNativeStackNavigator()\r\nconst MainFlow = createNativeStackNavigator()\r\nconst Tab = createMaterialBottomTabNavigator()\r\n\r\nconst Authentication = () => (\r\n  <LoginFlow.Navigator>\r\n    <Stack.Screen name = \"SignUp\" component={SignUp} />\r\n    <Stack.Screen name = \"SignIn\" component={SignIn} />\r\n  </LoginFlow.Navigator>\r\n)\r\n\r\nconst HomeStack = () => (\r\n  <Tab.Navigator>\r\n    <MainFlow.Navigator>\r\n      <Stack.Screen name = \"List\" component={ListScreen} />\r\n      <Stack.Screen name = \"Detail\" component={DetailScreen} />\r\n    </MainFlow.Navigator>\r\n    <Stack.Screen name = \"Create\" component={CreateScreen} />\r\n    <Stack.Screen name = \"Account\" component={AccountScreen} />\r\n  </Tab.Navigator>\r\n)\r\n\r\nconst App = () => {\r\n  const isLoggedIn = false\r\n  return (\r\n    <NavigationContainer>\r\n      {\r\n        isLoggedIn ? (\r\n          <HomeStack />\r\n         ) : (\r\n          <Authentication />\r\n        )\r\n      }\r\n    </NavigationContainer>\r\n  )\r\n}\r\n\r\nexport default App"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM;AACb,OAAOC,MAAM;AACb,OAAOC,YAAY;AACnB,OAAOC,YAAY;AACnB,OAAOC,UAAU;AACjB,OAAOC,aAAa;AACpB,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,gCAAgC,QAAQ,wCAAwC;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE1F,IAAMC,SAAS,GAAGP,0BAA0B,CAAC,CAAC;AAC9C,IAAMQ,QAAQ,GAAGR,0BAA0B,CAAC,CAAC;AAC7C,IAAMS,GAAG,GAAGP,gCAAgC,CAAC,CAAC;AAE9C,IAAMQ,cAAc,GAAG,SAAjBA,cAAcA,CAAA;EAAA,OAClBJ,KAAA,CAACC,SAAS,CAACI,SAAS;IAAAC,QAAA,GAClBR,IAAA,CAACS,KAAK,CAACC,MAAM;MAACC,IAAI,EAAG,QAAQ;MAACC,SAAS,EAAEtB;IAAO,CAAE,CAAC,EACnDU,IAAA,CAACS,KAAK,CAACC,MAAM;MAACC,IAAI,EAAG,QAAQ;MAACC,SAAS,EAAErB;IAAO,CAAE,CAAC;EAAA,CAChC,CAAC;AAAA,CACvB;AAED,IAAMsB,SAAS,GAAG,SAAZA,SAASA,CAAA;EAAA,OACbX,KAAA,CAACG,GAAG,CAACE,SAAS;IAAAC,QAAA,GACZN,KAAA,CAACE,QAAQ,CAACG,SAAS;MAAAC,QAAA,GACjBR,IAAA,CAACS,KAAK,CAACC,MAAM;QAACC,IAAI,EAAG,MAAM;QAACC,SAAS,EAAElB;MAAW,CAAE,CAAC,EACrDM,IAAA,CAACS,KAAK,CAACC,MAAM;QAACC,IAAI,EAAG,QAAQ;QAACC,SAAS,EAAEnB;MAAa,CAAE,CAAC;IAAA,CACvC,CAAC,EACrBO,IAAA,CAACS,KAAK,CAACC,MAAM;MAACC,IAAI,EAAG,QAAQ;MAACC,SAAS,EAAEpB;IAAa,CAAE,CAAC,EACzDQ,IAAA,CAACS,KAAK,CAACC,MAAM;MAACC,IAAI,EAAG,SAAS;MAACC,SAAS,EAAEjB;IAAc,CAAE,CAAC;EAAA,CAC9C,CAAC;AAAA,CACjB;AAED,IAAMmB,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAChB,IAAMC,UAAU,GAAG,KAAK;EACxB,OACEf,IAAA,CAACH,mBAAmB;IAAAW,QAAA,EAEhBO,UAAU,GACRf,IAAA,CAACa,SAAS,IAAE,CAAC,GAEbb,IAAA,CAACM,cAAc,IAAE;EAClB,CAEgB,CAAC;AAE1B,CAAC;AAED,eAAeQ,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}